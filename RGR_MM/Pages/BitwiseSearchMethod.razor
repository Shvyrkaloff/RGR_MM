@page "/BitwiseSearchMethod"

<h3>МЕТОД ПОРАЗРЯДНОГО ПОИСКА</h3>

<label>ε =</label>
<input type="text" @bind-value="_stopCondition" />
<button @onclick="ExecuteMethod">Execute method</button>

<div>
    <label>Точка минимума (x*): @_minX</label>
</div>
<div>
    <label>Минимум (f*): @_minF</label>
</div>
<div>
    <label>Число итераций: @_numberIterations</label>
</div>

@code
{
    const double LeftBorderSegment = 0.3;
    const double RightBorderSegment = 2.0;

    private double _stopCondition = 0.0;

    private int _numberIterations = 0;

    private double _minX;
    private double _minF;

    private static double Function(double x)
    {
        return x * Math.Sqrt(Math.Pow(x, 3) + 1) - Math.Pow(x, 2);
    }

    private void ExecuteMethod()
    {
        _numberIterations = 0;
        _minX = 0;
        _minF = 0;

        var step = (RightBorderSegment - LeftBorderSegment) / 4;

        _minX = LeftBorderSegment;
        _minF = Function(_minX);

        double sravnX = 0.0;

        while (Math.Abs(step) > _stopCondition)
        {
            _numberIterations++;
            sravnX = _minX + step;

            if (_minF > Function(sravnX))           
            {
                _minX = sravnX;              
                _minF = Function(_minX);
                if (_minX is > LeftBorderSegment and < RightBorderSegment)
                    continue;
            }
                            
            step = -(step / 4);
            _minX = sravnX;
            _minF = Function(_minX);
        }
    }
}
